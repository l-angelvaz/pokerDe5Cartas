/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package iuGrafica;

import dominio.EventosGenerales;
import dominio.Fachada;
import dominio.Jugador;
import dominio.Mesa;
import vistas.MesaJugador;
import excepciones.MesaException;
import excepciones.UsuarioException;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import observador.Observable;
import observador.Observador;

/**
 *
 * @author angel
 */
public class InicioJugador extends javax.swing.JFrame implements Observador {

    /**
     * Creates new form InicioJugador
     */
    private Jugador jugador;

    public InicioJugador(Jugador j) {
        initComponents();
        setLocationRelativeTo(null);
        jugador = j;
        Fachada.getInstancia().agregarObservador(this);
        setTitle("INICIO DE JUGADOR - " + jugador.getNombreCompleto().toUpperCase() + " | Saldo: ($" + jugador.getSaldo() + " )");
        mostrarMesas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        tituloMesas = new javax.swing.JLabel();
        btnIngresar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaMesasDisponibles = new javax.swing.JTable();
        campoMensaje = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tituloMesas.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tituloMesas.setText("Mesas Disponibles");

        btnIngresar.setBackground(new java.awt.Color(174, 204, 153));
        btnIngresar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnIngresar.setText("Ingresar");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        tablaMesasDisponibles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tablaMesasDisponibles);

        campoMensaje.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tituloMesas, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(tituloMesas, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(campoMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void actualizar(Object evento, Observable origen) {
        if (evento.equals(EventosGenerales.Eventos.cambioListaTodasMesas)) {
            mostrarMesas();
            setTitle("INICIO DE JUGADOR - " + jugador.getNombreCompleto().toUpperCase() + " | Saldo: ($" + jugador.getSaldo() + " )");
        }
    }

    private void mostrarMesas() {
        String[] columnas = {"NroMesa", "Jug.Requeridos", "($)Apuesta Base", "Jug.Participantes", "(%)Comisi√≥n"};
        Object[][] datos = Fachada.getInstancia().listarMesasAbiertas();

        DefaultTableModel modeloTabla = new DefaultTableModel(datos, columnas) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; //para que no se puedan editar las celdas
            }
        };

        tablaMesasDisponibles.setModel(modeloTabla);
        tablaMesasDisponibles.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tablaMesasDisponibles.getTableHeader().setReorderingAllowed(false);
        tablaMesasDisponibles.getTableHeader().setResizingAllowed(false);
        tablaMesasDisponibles.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
    }

    private void obtenerEingresarMesa() throws MesaException, UsuarioException {
        int posicion = tablaMesasDisponibles.getSelectedRow();
        if (posicion != -1) {
            int nroMesa = (int) tablaMesasDisponibles.getValueAt(posicion, 0);
            Mesa seleccionada = Fachada.getInstancia().obtenerMesa(nroMesa);
            boolean jugadorEstaEnMesa = Fachada.getInstancia().estaEnMesa(jugador);
            if (jugador.getSaldo() < (seleccionada.getApuestaBase() * 10)) {
                mostrarMensaje("Saldo insuficiente para ingresar a esta mesa.");
            } else if (jugadorEstaEnMesa) {
                mostrarMensaje("Ya te encuentras en una mesa.");
            } else {
                new MesaJugador(this, false, jugador, seleccionada).setVisible(true);
            }
        }
    }

    private void mostrarMensaje(String mensaje) {
        campoMensaje.setText(mensaje);
    }

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
//             TODO add your handling code here:
            Fachada.getInstancia().logoutJugador(jugador.getCedula());
            dispose();
        } catch (UsuarioException ex) {
            mostrarMensaje(ex.getMessage());
        }
    }//GEN-LAST:event_formWindowClosing
    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        try {
            // TODO add your handling code here:
            obtenerEingresarMesa();
        } catch (MesaException | UsuarioException ex) {
            mostrarMensaje(ex.getMessage());
        }
    }//GEN-LAST:event_btnIngresarActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIngresar;
    private javax.swing.JLabel campoMensaje;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tablaMesasDisponibles;
    private javax.swing.JLabel tituloMesas;
    // End of variables declaration//GEN-END:variables

}
